
#Область ОписаниеПеременных
#КонецОбласти

#Область ОбработчикиСобытийФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Поиск(Команда)
	ПоискНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоискНаСервере()
	
	ТЗРезультат.Очистить();
	СтруктураОтвета = Ядро_Сервер.ПоискРасширений(СтрокаПоиска);
	
	Если СтруктураОтвета <> Неопределено Тогда
		
		Для каждого Расширение Из СтруктураОтвета.result.extensions Цикл
		
			НоваяСтрока = ТЗРезультат.Добавить();
			НоваяСтрока.Наименование = Расширение.name;
			НоваяСтрока.Версия = Расширение.version;
			НоваяСтрока.ИдентификаторРасширения = Расширение.id;
			
		КонецЦикла;
		
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширение(Команда)
	
	ТекущаяСтрока = Элементы.ТЗРезультат.ТекущаяСтрока;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Ядро_Сервер.СообщитьПользователюОбОшибке("НеВыбранаСтрока"); // todo: лишной серверный вызов, позже исправить
		Возврат;
	Иначе
		СтатусУстановки = УстановитьРасширениеНаСервере(Элементы.ТЗРезультат.ТекущаяСтрока); 
	КонецЕсли;
	
	Оповестить("Ядро_ ОбновитьСписокРасширений");
	
	Если ЗначениеЗаполнено(СтатусУстановки) Тогда
		Сообщить(СтатусУстановки); // todo: предложить перезапуск приложения
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УстановитьРасширениеНаСервере(ИдентификаторСтроки)
	
	СтрокаТЗ = ТЗРезультат.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если Не СтрокаТЗ = Неопределено Тогда
		Возврат Ядро_Сервер.УстановитьРасширениеИзДиспетчера(СтрокаТЗ.ИдентификаторРасширения);
	КонецЕсли;
	
	Возврат "";

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#КонецОбласти